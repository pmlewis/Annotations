Release It! - Michael Nygard
---------------------------

## Introduction
* First your system needs to have Stability. Lack of Stability means short-term fixes, emergencies, "excitement", and daily fires
* Once gaining Stability, you need Capacity, being able to handle loads and increase in volume of uses in your system
* Good designs are more resilient than bad, and designing for network and storage usage have sets of challenges to account for
* You must have visibility into your system, in prod, QA, etc, and the system should be transparent and produce useful reporting that leads to actionable troubleshooting

## Stability
1. The exception that grounded an Airline
1. Introducing Stability
1. Stability AntiPatterns
1. Stability Patterns

## Capacity
1. Trampled by your own customers
1. Introducing Capacity
1. Capacity AntiPatterns
1. Capacity Patterns

## General Design Issues
1. Networking
1. Security
1. Availability
1. Administration
  * An easy-to-administrate system is a happy system, and leads to happy admins and users. How can you make your system at large easier to admin?
  * Making QA match Prod
    + According to Nygard, the most influential differences between Prod and QA tend to not be configuration differences, but *Topology* differencies
    + Topology - the number and connectivity of servers and applications. Produce diagrams of your Topology of your System, across your environments. Other environments should mimic prod's topology
    + Keep your environments separated! Utilize different machines or relegate separation with VM's.
    + Practice the Zero, One, Many rule in differences between environments. In prod, you may have zero, one, or many of a given resource in your topology. If you must scale down other environments compared to prod, at least make sure your copy environment matches the zero, one, or many instances in its topology. Never have only one of a resource in nonprod when there's many in prod
    + Do you have firewalls and load balancers in prod? Your copy environments ( **including dev!** ) must have them also at the same topology points, at the very least cheaper versions of prod. Make sure you have firewalls in place day one in dev also, avoid introducing them after development has already started
  * Configuration Files
    +

## Operations
1. Phenomenal Cosmic Powers, Itty-Bitty Living space
1. Transparency
1. Adaptation

