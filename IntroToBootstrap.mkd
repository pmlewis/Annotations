# Intro to Bootstrap
* Bootstrap widgets require jQuery
* comes with loads of classes you can include in your html to get going
* try to keep bootstraps css, img, and js directories together in the same directory
* Reuseable styles, build upon styles
* Semantic class names
* Compositional classes, include many classes to one div to get magic going
* focuses on Convention
* styles are supposed to be easily overridible

## Layout with Bootstrap
* Grid Layouts
* *This course seems to focus on the previous version of Bootstrap which is pretty different from Bootstrap 3*
* 12 Columns
* can have as many rows as you'd like 
* can have multiple containers for rows, but do not nest containers
* rows can be nested in columns
* columns can be offset
* resizing the window may reflow columns that are side by side, but will never break a column unit, i.e. col-md-7 col-mid-offset-2 will be together as one always
* According to the author, having rows outside of a container is ok, and will have reflow, but by dafault is flush left. Putting in a container with center, but be fixed width. *Not totally sure this is a behavior in place for Bootstrap 3*
* `.container` for fixed width, `.container-fluid` for fluid layouts
    + in fluid, content may shrink in size
* Responsive Design traits
    + Bootstrap comes with media queries for window size, check out their docs for specifics on pixels
    + having responsiveness will at a certain point change columns size so that small columns will change to full width
    + there are helper classes that can make elements visible or hidden at certain view sizes. You can use this to say include different logos, or have different navigation schemes
* try checking out BootTheme for generating Bootstrap themes

## Everyday Bootstrap
* Typography
    + including bootstrap will set the default fonts to Helvetica style sans-serif
    + classes for leading text, warning text, info text, etc
    + styles for `<address>`, `<blockquote>`
    + styles for `<ul>`, `<dl>`
* Tables
    + add class `.table` for some instant goodness
        - adds width %100 and top and bottom borders for `<tr>`
    + `.table-striped`, `.tabled-bordered`, `.table-hover`
        - stuff like this can be easily overridden by copying the style rule's selector, pasting it into some override css file, and customize your sheez
    + `.table-condensed` for less padding
    + some style classes for `<tr>`
* Forms
    + Having a `<form>` on the page unstyled, then adding bootstrap can add a whole bunch of magic and snaz
    + have checkboxes and radios inside of `<label>`, then add a class like `<label class="checkbox">` to solve ugly alignment issues
    + can add classes to `<input>` to increase the length of a textbox, like `.col-X-X` or `.input-xxl` or `.input-block-level`
    + `<input type="submit">` can take classes `.btn` or something like `.btn .btn-primary`
    + for horizontal forms, the labels can be side-by-side the input controls (*I like this*), but needs more markup
        - make your form `<form class="form-horizontal">`
        - wrap each "line"  in `<div class="control-group">`
        - make `<label class="control-label">`
        - wrap inputs in a `<div class="controls">`
    + classes for adding help text, invalid input text
* Buttons
    + `.btn` - works for
        - `<a href="#">`
        - `<button type="button">`
    + `.btn-link`
    + `.btn-large`, `.btn-small`
    + `.btn-block`
    + `.disabled`
* Img
    + '.img-rounded`
    + `.img-circle`
    + `.img-poloroid`
    + includes many gliph icons (*remember to attribute*) - normally used with `<i>` elements, or even `<span>`
    + Checkout Font Awesome for Bootstrap
    + can prepend and append icons to input's to have a nice leading gliph on the input
    
## Bootstrap Components
- mostly means clickable things. Remember to include jQuery!
* Dropdowns
    + Basic code to start
    
            <div class="dropdown">
               <a class="dropdown-toggle" href="#" data-toggle="dropdown">Click me</a>
               <ul class="dropdown-menu">
                  <li><a href="whateve">Init</a></li>
               </ul>
             </div>
             
     + `<span class="caret"></span>` - for a nice little "dropdown" caret that is not an image, but css trickery
     + `role`, `aria-labeledby`
     + `<a tabindex="-1">` to make links that you can't reach by pressing tab
     + `<li class="divider">` to have a dropdown item have a divider
     + submenus
     
            <li class="dropdown-submenu">
               <a href="#">More options</a>
               <ul class="dropdown-menu">
                  <li><a href="stuff">Stuff</a></li>
                </ul>
             </li>
             
* Buttons and button groups
    + button groups make a series of buttons look continuous
        - `.btn-group`, `.btn-group-vertical`
    + can add `.dropdown` to buttons
    + can have dropup menus
    + split buttons - having "one button" that has two separate clickable buttons, like the main text one, and a more specific dropdown caret
        - make the two in one `.btn-group`, have differnt `<a href>`
* Tabs & Pills
    + first, have `<ul class="nav">`
    + then you can have things like `.nav-tabs`, or `.nav-pills`
    + `<li class="active">`
    + `.nav-stacked` to have your <li> stack vertically 
    + `<li class="nav-header">` to have a separator with text in your nav
    + can have tabbable content, so you can have content within the same page, but can click on tabs to have it show or hide the content
    
            <div class="tabbable">
               <ul class="nav nav-tabs">
                  <li class="active">
                     <a href="#tab1" data-toggle="tab">Section 1</a>
                  </li>
                  <li>
                     <a href="#tab2" data-toggle="tab2">Section 2</a>
                  </li>
               </ul>
               <div class="tab-content">
                  <div class="tab-pane active" id="tab1">
                     <p>Hello tab 1</p>
                  </div>
                  <div class="tab-pane" id="tab2">
                     <p>Hello tab 2</p>
                  </div>
               </div>
            </div>
            
* Navbar - as in primary navigation
    + built around an unordered list `class="nav"
    + wrap around with `<nav class="navbar">`
        - `<div class="navbar-inner">`
    + `<a class="brand" href="/">` for something like the site name
    + `navbar-fixed-top` for the bar sticking to the top of the window always
    + `.nav-collapse collapse` to make elements in the nav disappear on window resizing
    + Bootstrap breadcrumbs
        - `<ul class="breadcrumb">`
        - `<li class = "active">`
    + Pagination
        - for like pages in a forum thread
* Heros, Badges, Labels, and Media
    + Hero - large centerpiece of homepage
        - `<div class="hero-unit">`
        - use `<h1>` and `<p>`
    + Badges and labels
        - `<span class="label">` or `<span class="badge">`
        - `-warning`, `-success`, `-important`, etc
    + Alerts
        - not pop ups, but an element that appears in page, that has a dismissal button, can use for error messages
    + Media
        - to have some images inline with some text, and have the text be "connected" to the image, or other media

## Buttons and Javascript
* Buttons
    + `data-toggle` can make things like make buttons behave like checkboxes or radios
    + Take advantage of jQuery since you'll probably have it linked for Bootstrap. Can check if element hasClass(".active")
    + `data-loading-text` - can call $(".whaver").button("loading") to switch on click what the current text for the .whaver to whatever the data-loading-text=
* Modals
    + Have a button (button button or `<a>` button) with `data-toggle="modal"` point to an `href="#somemodalid"`
    + `<div id="somemodalid" class="modal hide fade">`
        - `.modal-header`, `.modal-body`, `.modal-footer`
    + there are also bootstrap process bars you can use
    + for way more info, check out the documentation
* Tooltips
    + hovering over a anchor, then having a bit of info pop up 
    + Popovers - clicking on a link, then having a thing pop up on it and kind of stick around
* Scrollspy
    + being able to have some reaction based on scrolling through a page
    + `data-spy="scroll"`, `data-target=".navspy"
    + `data-spy-offset`
* Typeahead
    + like an autocomplete for input boxes. Very easy, and can add things to completion list programmatically
* Carousel
    + being able to have pictures flow, slide, etc